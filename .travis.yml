jobs:
  include:
    # build-and-deploy stage
    - stage: build-and-deploy
      # Define a template with JAVA
      language: java
      # cache: Add a cache folder to improve build-speed
      cache:
        directories:
        - $HOME/.m2
      # install phase: with maven project packaging a jar is implicit
      # script phase: Copy artefact to build folder to allow upload to S3 bucket
      script:
      - mkdir build
      - cp target/demo-1.0.jar build/demo.jar
      # Run a set of AWS eb commands to deploy application to AWS (Check for AWS Beanstalk logs to check for creation and deployment)
      before_deploy:
      - export ELASTIC_BEANSTALK_ENV=node-server-${TRAVIS_BRANCH}
      - export ELASTIC_BEANSTALK_LABEL=git-$(git rev-parse --verify HEAD --short)
      - export ELASTIC_BEANSTALK_DESCRIPTION=https://github.com/sumn2u/node-server/tree/$(git rev-parse HEAD)
      - docker pull chriscamicas/awscli-awsebcli
      - docker run -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY chriscamicas/awscli-awsebcli /bin/sh -c "eb init continuous-deployment-demo -p \"corretto-17\" --region \"ca-central-1\"; eb create travisci-env --single || true; eb setenv SERVER_PORT=5000"
      after_deploy:
      - rm build/demo.jar
      # deploy binary from s3 bucket to beanstalk
      deploy:
      - provider: elasticbeanstalk
        access_key_id: $AWS_ACCESS_KEY_ID
        secret_access_key: $AWS_SECRET_ACCESS_KEY
        zip-file: "build/demo.jar"
        region: "ca-central-1"
        app: "continuous-deployment-demo"
        env: "travisci-env"
        bucket_name: "travisci-bucket"
        skip_cleanup: true
        only_create_app_version: false
