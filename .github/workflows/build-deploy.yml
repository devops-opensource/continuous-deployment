name: Build and deploy

on:
  push:
    branches: [ github-actions ]
  pull_request:
    branches: [ github-actions ]

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Cache local Maven repository
        uses: actions/cache@v2.0.0
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path:  ~/.m2/repository
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-maven-
            
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn package --file pom.xml -Dmaven.repo.local=.m2
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-jar
          # A file, directory or wildcard pattern that describes what to upload
          path: target/demo-1.0.jar

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          # Artifact name
          name: artifact-jar
          # Destination path
          path: target/demo-1.0.jar
      - name: AWS Elastic Beanstalk cli
        uses: hmanzur/actions-aws-eb@v1.0.0
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ca-central-1"
        with:
          command: |
            init continuous-deployment-demo -p "64bit Amazon Linux 2017.09 v2.6.4 running Java 8" 
            create github-env --single
            deploy github-env
            status
